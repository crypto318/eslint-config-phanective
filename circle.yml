version: 2

jobs:
  build:
    working_directory: ~/eslint-config-phanective
    docker:
      - image: phanect/ci-eslint-config-phanective
    steps:
      - run:
          name: System Update
          command: |
            sudo apt-get update -qq
            DEBIAN_FRONTEND=noninteractive sudo apt-get dist-upgrade --yes

            sudo npm install --global npm

      # Test
      - checkout
      - run: yarn install
      - run: npx eslint .

      - deploy:
          command: |
            if [[ -n "$CIRCLE_PULL_REQUEST" ]]; then
              #
              # If this build is pull request, check if `version` in package.json
              # is bumped up correctly in case config.[js|ts] is/are updated.
              #

              # Check if config.[js|ts] is updated in this pull request
              CONFIG_UPDATED="false"
              PR_NUMBER="$(echo "$CIRCLE_PULL_REQUEST" | cut --delimiter="/" --fields=7)"

              MODIFIED_FILES="$(curl --silent "https://api.github.com/repos/phanect/eslint-config-phanective/pulls/${PR_NUMBER}/files" | jq --raw-output ".[] | .filename")"

              for MODIFIED_FILE in $MODIFIED_FILES; do
                if [[ "$MODIFIED_FILE" = "eslint-config/config.js" ]]; then
                  CONFIG_UPDATED="true"
                  break;
                fi

                if [[ "$MODIFIED_FILE" = "tslint-config/config.ts" ]]; then
                  CONFIG_UPDATED="true"
                  break;
                fi
              done

              # In case config.[js|ts] is/are updated, check if `version` in package.json is/are updated

              if [[ "$CONFIG_UPDATED" = "true" ]]; then
                check_version () {
                  local linter="$1"

                  NEW_VERSION="$(cat $HOME/eslint-config-phanective/$linter-config/package.json | jq --raw-output ".version")"
                  if [[ -n "$(npm view "@phanect/$linter-config-phanective@$NEW_VERSION")" ]]; then
                    echo -e "$RED@phanect/$linter-config-phanective@$NEW_VERSION already exists. Did you update version in package.json?$NC\n" > /dev/stderr
                    exit 1
                  fi
                }

                check_version "eslint"
                check_version "tslint"
              fi
            elif [[ "${CIRCLE_BRANCH}" = "master" ]]; then
              #
              # If this build is master branch, deploy to npmjs.com
              #
              git clean -dX --force # Remove files written in .gitignore so they are not included in package

              echo -e "phanect\n$NPM_PASSWORD\n$NPM_EMAIL" | npm login

              npm publish . --access public
            else
              echo "Something unexpected happened" > /dev/stderr
              exit 1
            fi
